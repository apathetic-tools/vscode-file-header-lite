{
  "name": "vscode-file-header-lite",
  "displayName": "File Header Lite",
  "version": "0.0.1",
  "description": "Adds a single-line file header comment with filepath and optional role.",
  "keywords": [
    "header",
    "filename",
    "filepath",
    "context"
  ],
  "author": {
    "name": "Apathetic Tools",
    "url": "https://github.com/apathetic-tools"
  },
  "publisher": "apathetic-tools",
  "license": "MIT",
  "icon": "images/icon.png",
  "engines": {
    "vscode": "^1.80.0"
  },
  "categories": [
    "Programming Languages"
  ],
  "activationEvents": [
    "onStartupFinished"
  ],
  "main": "./dist/extension.js",
  "contributes": {
    "configuration": {
      "title": "Filename Header",
      "properties": {
        "filenameHeader.languages": {
          "type": "object",
          "default": {
            "javascript": "// ${relativeFile}",
            "typescript": "// ${relativeFile}",
            "python": "# ${relativeFile}",
            "html": "<!-- ${relativeFile} -->"
          },
          "description": "Map of language id to header format. Supports ${fileName} and ${relativeFile}.",
          "scope": "resource"
        },
        "filenameHeader.roles": {
          "type": "object",
          "default": {},
          "description": "Optional mapping of glob patterns to role/type labels. Example: { 'src/components/*': 'React component' }",
          "scope": "resource"
        },
        "filenameHeader.addLanguageLabel": {
          "type": "boolean",
          "default": true,
          "description": "Whether to automatically append a human-readable language label (e.g. '(TypeScript React)').",
          "scope": "resource"
        }
      }
    }
  },
  "scripts": {
    "compile": "tsc -p .",
    "watch": "tsc -w -p .",
    "dev": "pnpm run watch",
    "package": "pnpm run compile && vsce package",
    "publish": "pnpm run compile && vsce publish",
    "icon:png": "pnpm run icon:png:128 && pnpm run icon:png:256",
    "icon:png:128": "pnpm dlx @resvg/resvg-js-cli images/icon.svg images/icon.png",
    "icon:png:256": "pnpm dlx @resvg/resvg-js-cli images/icon.svg images/icon@256.png 2",
    "format": "prettier --write .",
    "check": "pnpm run lint:prettier && pnpm run lint:eslint && pnpm run lint:tsc",
    "lint:prettier": "prettier --check .",
    "lint:eslint": "eslint . --ext .ts",
    "lint:tsc": "tsc --noEmit",
    "fix": "pnpm run lint:fix:prettier && pnpm run lint:fix:eslint && pnpm run lint:tsc",
    "lint:prettier:fix": "prettier --write .",
    "lint:fix:eslint": "eslint . --ext .ts --fix"
  },
  "dependencies": {
    "minimatch": "^10.0.3"
  },
  "devDependencies": {
    "@eslint/js": "^9.37.0",
    "@types/node": "^24.6.2",
    "@types/vscode": "^1.104.0",
    "@typescript-eslint/eslint-plugin": "^8.45.0",
    "@typescript-eslint/parser": "^8.45.0",
    "@vscode/vsce": "^2.30.0",
    "eslint": "^9.37.0",
    "eslint-config-prettier": "^10.1.8",
    "husky": "^9.1.7",
    "jiti": "^2.6.1",
    "lint-staged": "^16.2.3",
    "prettier": "^3.6.2",
    "typescript": "^5.9.3",
    "typescript-eslint": "^8.45.0"
  },
  "packageManager": "pnpm@10.18.0",
  "lint-staged": {
    "*.ts": [
      "prettier --write",
      "eslint --ext .ts --fix"
    ],
    "*.{json,.jsonc,md,mdx,yml,yaml}": [
      "prettier --write"
    ]
  }
}
